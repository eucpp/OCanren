fun q -> g123 q, 3 answers {
q=1;
q=2;
q=3;
}
fun q -> g12 q, 3 answers {
q=1;
q=2;
}
fun q r -> gxy q r, 10 answers {
q=1; r=1;
q=1; r=2;
q=2; r=1;
q=1; r=3;
q=3; r=1;
q=2; r=2;
q=3; r=2;
q=2; r=3;
q=3; r=3;
}
fun q r -> gxy' q r, 10 answers {
q=1; r=2;
q=2; r=1;
q=1; r=3;
q=3; r=1;
q=3; r=2;
q=2; r=3;
}
fun q ->
  MiniKanren.Fresh.two (fun x y -> MiniKanren.compose [(===) x y; (=/=) x y]), all answers {
}
fun q ->
  MiniKanren.Fresh.two (fun x y -> MiniKanren.compose [(=/=) x y; (===) x y]), all answers {
}
fun q ->
  MiniKanren.Fresh.two
    (fun x y -> MiniKanren.compose [(=/=) x y; (===) !3 x; (===) !3 y]), all answers {
}
fun q ->
  MiniKanren.Fresh.two
    (fun x y -> MiniKanren.compose [(===) !3 x; (=/=) x x; (===) !3 y]), all answers {
}
fun q ->
  MiniKanren.Fresh.two
    (fun x y -> MiniKanren.compose [(===) !3 x; (===) !3 y; (=/=) x y]), all answers {
}
fun q ->
  MiniKanren.Fresh.two
    (fun x y -> MiniKanren.compose [(===) !3 x; (===) !3 y; (=/=) y x]), all answers {
}
fun q ->
  MiniKanren.Fresh.three
    (fun x y z ->
       MiniKanren.compose
         [(===) x y; (===) y z; (=/=) x !4; (===) z !(2 + 2)]), all answers {
}
fun q ->
  MiniKanren.Fresh.three
    (fun x y z ->
       MiniKanren.compose
         [(===) x y; (===) y z; (===) z !(2 + 2); (=/=) x !4]), all answers {
}
fun q ->
  MiniKanren.Fresh.three
    (fun x y z ->
       MiniKanren.compose
         [(=/=) x !4; (===) y z; (===) x y; (===) z !(2 + 2)]), all answers {
}
fun q -> (=/=) q !5, all answers {
q=_.10 [=/= 5];
}
fun q -> (&&&) ((=/=) q !3) ((===) q !3), all answers {
}
fun q -> (&&&) ((===) q !3) ((=/=) !3 q), all answers {
}
